<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashvergegithub.github.io/news/article-44420.htm" />
    <meta charset="utf-8">
    <title>深入浅出谈谈Java并发编程：Volatile</title>
        <meta name="description" content="Volatile关键字是Java提供的一种轻量级的同步机制。Java 语言包含两种内在的同步机制：同步块（或方法）和 volatile 变量， 相比synchronized（synchronized通" />
        <link rel="icon" href="/assets/website/img/clashvergegithub/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Clash Verge Github机场节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashvergegithub.github.io/news/article-44420.htm" />
    <meta property="og:site_name" content="Clash Verge Github机场节点分享官网" />
    <meta property="og:title" content="深入浅出谈谈Java并发编程：Volatile" />
    <meta property="og:image" content="https://clashvergegithub.github.io/uploads/20240909/b4d727ceb2214e5f06c9450d91a6eb51.webp" />
        <meta property="og:release_date" content="2025-01-22T10:12:30" />
    <meta property="og:updated_time" content="2025-01-22T10:12:30" />
        <meta property="og:description" content="Volatile关键字是Java提供的一种轻量级的同步机制。Java 语言包含两种内在的同步机制：同步块（或方法）和 volatile 变量， 相比synchronized（synchronized通" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Pe-7 icon -->
    <link href="/assets/website/css/clashvergegithub/pe-icon-7.css" rel="stylesheet" type="text/css">
    <!--Slider-->
    <link rel="stylesheet" href="/assets/website/css/clashvergegithub/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergegithub/owl.theme.default.min.css">
    <!-- css -->
    <link href="/assets/website/css/clashvergegithub/bootstrap.min.css" rel="stylesheet" type="text/css">
    <link href="/assets/website/css/clashvergegithub/style.min.css" rel="stylesheet" type="text/css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="深入浅出谈谈Java并发编程：Volatile">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-5B0MSD7J3T"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-5B0MSD7J3T');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Loader -->
    <div id="preloader">
        <div id="status">
            <div class="spinner">
                <div class="bounce1"></div>
                <div class="bounce2"></div>
                <div class="bounce3"></div>
            </div>
        </div>
    </div>
    <!--Navbar Start-->
    <nav class="navbar navbar-expand-lg fixed-top navbar-custom sticky sticky-dark align-items-center">
        <div class="container">
            <!-- LOGO -->
                        <a class="logo mr-3" href="/">
                <span>Clash Verge Github</span>
            </a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarCollapse" aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
                <i class="" data-feather="menu"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarCollapse">
                <ul class="navbar-nav">
                                        <li class="nav-item">
                        <a href="/" class="nav-link">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a href="/free-nodes/" class="nav-link">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a href="/paid-subscribe/" class="nav-link">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a href="/news/" class="nav-link">新闻资讯</a>
                    </li>
                                        <li class="nav-item">
                        <a href="#" class="nav-link">关于</a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link">联系</a>
                    </li>
                </ul>
                
            </div>
        </div>
    </nav>
    <!-- Navbar End -->
    <!-- Hero Start -->
    <section class="hero-5-bg position-relative bg-light" id="home" style="height:500px;">
        <div class="container">
            <div class="row">
                <div class="col-lg-6">
                    <div style="margin-top: 4rem;">
                        <h1 class="hero-5-title line-height-1_4 mb-4">深入浅出谈谈Java并发编程：Volatile</h1>
                        <p class="text-muted mb-4 pb-3">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
                <div class="col-lg-6">
                    <img src="/assets/website/img/clashvergegithub/hero-5-img.png" alt="Clash Verge Github hero" class="hero-5-img">
                </div>
            </div>
        </div>
    </section>
    <!-- Hero End -->
    <!-- Features Start -->
    <section class="section" id="features">
        <div class="container">
            <div class="features-content">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Verge Clash节点订阅官网" data-url="https://vergeclash.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>Volatile关键字是Java提供的一种轻量级的同步机制。Java 语言包含两种内在的同步机制：同步块（或方法）和 volatile 变量， 相比synchronized（synchronized通常称为重量级锁），volatile更轻量级，因为它不会引起线程上下文的切换和调度。 但是volatile 变量的同步性较差（有时它更简单并且开销更低），而且其使用也更容易出错。</p> </h1> <h2>1.1、保证可见性，不保证原子性</h2> <ul> <li>当写一个volatile变量时，JMM会把该线程本地内存中的变量强制刷新到主内存中去；</li> <li>这个写会操作会导致其他线程中的volatile变量缓存无效。</li> </ul> <p>来看一段代码：</p> <pre><code>public class Test {     public static void main(String[] args) {         WangZai wangZai = new WangZai();         wangZai.start();         for(; ;){             if(wangZai.isFlag()){                 System.out.println("hello");             }         }     }      static class WangZai extends Thread {          private boolean flag = false;          public boolean isFlag(){             return flag;         }          @Override         public void run() {             try {                 Thread.sleep(1000);             } catch (InterruptedException e) {                 e.printStackTrace();             }             flag = true;             System.out.println("flag = " + flag);         }     } }</code></pre> <p>你会发现，永远都不会输出hello这一段代码，按道理线程改了flag变量，主线程也能访问到的呀？</p> <p>但是将flag变量用volatile修饰一下，就能输出hello这段代码</p> <pre><code>private volatile boolean flag = false;</code></pre> <p>每个线程操作数据的时候会把数据从主内存读取到自己的工作内存，如果他操作了数据并且写会了，那其他已经读取的线程的变量副本就会失效了，需要对数据进行操作又要再次去主内存中读取了。</p> <p>volatile保证不同线程对共享变量操作的可见性，也就是说一个线程修改了volatile修饰的变量，当修改写回主内存时，另外一个线程立即看到最新的值。</p> <h2>1.2、禁止指令重排</h2> <p>重排序需要遵守一定规则：</p> <ul> <li>重排序操作不会对存在数据依赖关系的操作进行重排序。</li> <li>重排序是为了优化性能，但是不管怎么重排序，单线程下程序的执行结果不能被改变。</li> </ul> <h3>什么是重排序?</h3> <p>为了提高性能，编译器和处理器常常会对既定的代码执行顺序进行指令重排序。</p> <h3>重排序的类型有哪些呢？</h3> <p style="text-align:center;"><img decoding="async" alt="深入浅出谈谈Java并发编程：Volatile" src="http://img.555519.xyz/uploads/20230108/68c93c5bb0fea9eade5977b4d4a68394.jpg"></p> <p>一个好的内存模型实际上会放松对处理器和编译器规则的束缚，也就是说软件技术和硬件技术都为同一个目标，而进行奋斗：在不改变程序执行结果的前提下，尽可能提高执行效率。</p> <p>JMM对底层尽量减少约束，使其能够发挥自身优势。</p> <p>因此，在执行程序时，为了提高性能，编译器和处理器常常会对指令进行重排序。</p> <p>一般重排序可以分为如下三种：</p> <ul> <li>编译器优化的重排序。编译器在不改变单线程程序语义的前提下，可以重新安排语句的执行顺序;</li> <li>指令级并行的重排序。现代处理器采用了指令级并行技术来将多条指令重叠执行。如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序;</li> <li>内存系统的重排序。由于处理器使用缓存和读/写缓冲区，这使得加载和存储操作看上去可能是在乱序执行的。</li> </ul> <p>那 Volatile 是怎么保证不会被执行重排序的呢？</p> </h1> <p>java编译器会在生成指令系列时在适当的位置会插入内存屏障指令来禁止特定类型的处理器重排序。</p> <p>为了实现volatile的内存语义，JMM会限制特定类型的编译器和处理器重排序，JMM会针对编译器制定volatile重排序规则表：</p> <p>是否能重排序第二个操作第一个操作普通读/写volatile读volatile写普通读/写NOvolatile读NONONOvolatile写NONO</p> <p>举例来说，第三行最后一个单元格的意思是：在程序顺序中，当第一个操作为普通变量的读或写时，如果第二个操作为volatile写，则编译器不能重排序这两个操作。</p> <p>从上表我们可以看出：</p> <ul> <li>当第二个操作是volatile写时，不管第一个操作是什么，都不能重排序。这个规则确保volatile写之前的操作不会被编译器重排序到volatile写之后。</li> <li>当第一个操作是volatile读时，不管第二个操作是什么，都不能重排序。这个规则确保volatile读之后的操作不会被编译器重排序到volatile读之前。</li> <li>当第一个操作是volatile写，第二个操作是volatile读时，不能重排序。</li> </ul> <p>需要注意的是：volatile写是在前面和后面<strong>分别插入内存屏障</strong>，而volatile读操作是在<strong>后面插入两个内存屏障</strong>。</p> <h2>写</h2> <p style="text-align:center;"><img decoding="async" alt="深入浅出谈谈Java并发编程：Volatile" src="http://img.555519.xyz/uploads/20230108/3a8b88a187f7aba165963ac6c275e68a.jpg"></p> <h2>读</h2> <p style="text-align:center;"><img decoding="async" alt="深入浅出谈谈Java并发编程：Volatile" src="http://img.555519.xyz/uploads/20230108/e6faf75a91fd15d91a24cf2d7e936f3f.jpg"></p> <p>从JDK5开始，提出了happens-before的概念，通过这个概念来阐述操作之间的内存可见性。</p> </h1> <p>happens-before 关系的定义：</p> <ul> <li>如果一个操作 happens-before 另一个操作，那么第一个操作的执行结果就会对第二个操作可见。</li> <li>两个操作之间如果存在 happens-before 关系，并不意味着 Java 平台的具体实现就必须按照 happens-before 关系指定的顺序来执行。如果重排序之后的执行结果，与按照 happens-before 关系来执行的结果一直，那么 JMM 也允许这样的重排序。</li> </ul> <p>看到这儿，你是不是觉得，这个怎么和 as-if-serial 语义一样呢。没错， happens-before 关系本质上和 as-if-serial 语义是一回事。</p> <p>as-if-serial 语义保证的是单线程内重排序之后的执行结果和程序代码本身应该出现的结果是一致的，</p> <p>happens-before 关系保证的是正确同步的多线程程序的执行结果不会被重排序改变。</p> <p>一句话来总结就是：如果操作 A happens-before 操作 B ，那么操作 A 在内存上所做的操作对操作 B 都是可见的，不管它们在不在一个线程。</p> <p>在 Java 中，对于 happens-before 关系，有以下规定：</p> <ul> <li>程序顺序规则：一个线程中的每一个操作， happens-before 于该线程中的任意后续操作。</li> <li>监视器锁规则：对一个锁的解锁， happens-before 于随后对这个锁的加锁。</li> <li>volatile 变量规则：对一个 volatile 域的写， happens-before 与任意后续对这个 volatile 域的读。</li> <li>传递性：如果 A happens-before B ， 且 B happens-before C ，那么 A happens-before C。</li> <li>start 规则：如果线程 A 执行操作 ThreadB。start() 启动线程 B ，那么 A 线程的 ThreadB。start() 操作 happens-before 于线程 B 中的任意操作。</li> <li>join 规则：如果线程 A 执行操作 ThreadB。join() 并成功返回，那么线程 B 中的任意操作 happens-before 于线程 A 从 ThreadB。join() 操作成功返回。</li> </ul> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-43928.htm">宠物猫接种疫苗多少钱（宠物猫疫苗针多少钱）</a></p>
                                        <p>下一个：<a href="/news/article-44421.htm">常用动物疫苗种类有哪些（常用动物疫苗种类有哪些图片）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-4-clash-verge-rev-github.htm" title="12月4日→20.7M/S|2024年最新免费节点Clash Verge Github订阅链接地址">12月4日→20.7M/S|2024年最新免费节点Clash Verge Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-21029.htm" title="东北农大动物医院电话是多少 东北农大动物医院电话是多少号">东北农大动物医院电话是多少 东北农大动物医院电话是多少号</a></li>
                        <li class="py-2"><a href="/news/article-27495.htm" title="动物医院管理软件有哪些（动物医院系统哪个好）">动物医院管理软件有哪些（动物医院系统哪个好）</a></li>
                        <li class="py-2"><a href="/news/article-30801.htm" title="家养比熊出售（比熊能卖多少钱）">家养比熊出售（比熊能卖多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-28892.htm" title="猫三联三针间隔多久（猫三联三针间隔多久打一针）">猫三联三针间隔多久（猫三联三针间隔多久打一针）</a></li>
                        <li class="py-2"><a href="/news/article-35153.htm" title="动物疫苗研制流程图（动物疫苗生产工艺流程图）">动物疫苗研制流程图（动物疫苗生产工艺流程图）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-16-free-node-subscribe.htm" title="1月16日→21.7M/S|2025年最新免费节点Clash Verge Github订阅链接地址">1月16日→21.7M/S|2025年最新免费节点Clash Verge Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-32698.htm" title="动物疫病预防控制中心电话（南京市动物疫病预防控制中心电话）">动物疫病预防控制中心电话（南京市动物疫病预防控制中心电话）</a></li>
                        <li class="py-2"><a href="/news/article-23777.htm" title="即食预制菜有哪些品种">即食预制菜有哪些品种</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-14-clash-verge-rev-nodes.htm" title="1月14日→20.6M/S|2025年最新免费节点Clash Verge Github订阅链接地址">1月14日→20.6M/S|2025年最新免费节点Clash Verge Github订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">72</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Features End -->
        <!-- Footer Start -->
    <section class="footer" style="background-image: url(/assets/website/img/clashvergegithub/hero-1-bg-img.png)">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="text-center">
                        <p class="text-white-50 f-15 mb-0">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <a href="/">Clash Verge Github机场节点分享官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Footer End -->
    <!-- javascript -->
    <script src="/assets/website/js/frontend/clashvergegithub/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/clashvergegithub/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/clashvergegithub/jquery.easing.min.js"></script>
    <!-- feather icons -->
    <script src="/assets/website/js/frontend/clashvergegithub/feather-icons.js"></script>
    <!-- carousel -->
    <script src="/assets/website/js/frontend/clashvergegithub/owl.carousel.min.js"></script>
    <!-- Main Js -->
    <script src="/assets/website/js/frontend/clashvergegithub/app.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>